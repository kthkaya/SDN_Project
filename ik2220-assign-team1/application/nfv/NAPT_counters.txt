//EXT_IN= External interface - Inbound
EXT_IN	::  FromDevice(NAPT-eth0, METHOD LINUX);
//EXT_OUT= External interface - Outbound
EXT_OUT	::  Queue(200) -> EXT_OUT_PKT_ACTR -> ToDevice(NAPT-eth0);
//INT_IN= Internal interface - Inbound
INT_IN  ::  FromDevice(NAPT-eth1, METHOD LINUX);
//INT_OUT= Internal interface - Outbound
INT_OUT ::  Queue(200) -> INT_OUT_PKT_ACTR -> ToDevice(NAPT-eth1);

//------------------------------------------------------------
AddressInfo(INT_ADD 10.0.0.1 00:00:45:8C:72:9E);
AddressInfo(EXT_ADD 100.0.0.1 00:00:45:5C:82:1A);

//------------------------------------------------------------
INT_IN_PKT_ACTR, INT_OUT_PKT_ACTR, EXT_IN_PKT_ACTR, EXT_OUT_PKT_ACTR :: AverageCounter;
INT_DROP_CTR, EXT_DROP_CTR, INT_ARP_REQ_CTR, EXT_ARP_REQ_CTR, INT_ARP_RESP_CTR, EXT_ARP_RESP_CTR :: Counter;
INT_SERV_PKT_CTR, EXT_SERV_PKT_CTR, INT_ICMP_PKT_CTR, EXT_ICMP_PKT_CTR :: Counter;

//------------------------------------------------------------
// Arp Querier for Internal interface
AQ_INT  ::   ARPQuerier(INT_ADD) -> INT_OUT;
// Arp Querier for External interface
AQ_EXT  ::   ARPQuerier(EXT_ADD) -> EXT_OUT;
// Arp Responder for Internal interface
AR_INT  ::   ARPResponder(INT_ADD) -> INT_OUT;
// Arp Responder for External interface
AR_EXT  ::   ARPResponder(EXT_ADD) -> EXT_OUT;

//------------------------------------------------------------
INT_FRAME_CLS  :: Classifier(12/0806 20/0001, 12/0806 20/0002, 12/0800, -)
EXT_FRAME_CLS  :: Classifier(12/0806 20/0001, 12/0806 20/0002, 12/0800, -)

//------------------------------------------------------------
INT_PKT_CLS  :: IPClassifier(dst host 10.0.0.1 and icmp type echo, icmp type echo, -)
EXT_PKT_CLS  :: IPClassifier(dst host 100.0.0.1 and icmp type echo, icmp type echo-reply, -)

//------------------------------------------------------------

RIB  :: StaticIPLookup(10.0.0.0/24 1,
		       10.0.0.255/32 1,
		       10.0.0.1/32 1,
		       100.0.0.0/24 0,
		       100.0.0.255/32 0,
		       100.0.0.1/32 0);
RIB[1] -> INT_ARP_RESP_CTR -> AQ_INT;
RIB[0] -> EXT_ARP_RESP_CTR -> AQ_EXT;	

//------------------------------------------------------------
PING_RW :: ICMPPingRewriter(pattern 100.0.0.1 - 0-65535# 0 1, drop)
IP_RW	:: IPRewriter(pattern 100.0.0.1 1024-65535# - - 0 1, drop);

//----------External to Internal Processing--------------------
INT_IN -> 
    INT_IN_PKT_ACTR ->
	INT_FRAME_CLS
	-> INT_ARP_REQ_CTR
		-> AR_INT;
	INT_FRAME_CLS[1]
		-> [1]AQ_INT;
	INT_FRAME_CLS[2]
		-> Strip(14)
		-> CheckIPHeader
		-> INT_PKT_CLS
		    -> INT_ICMP_PKT_CTR
			-> ICMPPingResponder
			-> AQ_INT;
		   INT_PKT_CLS[1]
		    -> INT_ICMP_PKT_CTR
			-> PING_RW
			-> RIB;
		   INT_PKT_CLS[2]
		   -> INT_SERV_PKT_CTR
			-> IP_RW
			-> RIB;
	INT_FRAME_CLS[3] 
	-> INT_DROP_CTR
		-> Discard;

//----------Internal to External Processing--------------------

EXT_IN ->
        EXT_IN_PKT_ACTR ->
        EXT_FRAME_CLS
		-> EXT_ARP_REQ_CTR
                -> AR_EXT; 
        EXT_FRAME_CLS[1]
                -> [1]AQ_EXT;
        EXT_FRAME_CLS[2]
		-> Strip(14)
		-> CheckIPHeader
		-> EXT_PKT_CLS
		             -> EXT_ICMP_PKT_CTR
                        -> ICMPPingResponder
			-> AQ_EXT;
                   EXT_PKT_CLS[1]
				   -> EXT_ICMP_PKT_CTR
                        -> [1] PING_RW [1]
			-> RIB;
		   EXT_PKT_CLS[2]
		                ->EXT_SERV_PKT_CTR
                        -> [1] IP_RW [1]
                        -> RIB;

        EXT_FRAME_CLS[3]
		-> EXT_DROP_CTR
                -> Discard;

//-----------------------Reporting-----------------------------
DriverManager(pause, wait 2s,
	print "\n\r NAPT 1 Logs dumped at /tmp/NAT_Report.log :",
	save "=========================LB1 REPORT========================
============External INTERFACE======================
Input Packet Rate (pps)	:	$(EXT_IN_PKT_ACTR.rate)
Output Packet Rate (pps):	$(EXT_OUT_PKT_ACTR.rate)

Total # of ARP requests	:	$(EXT_ARP_REQ_CTR.count)
Total # of ARP responses:	$(EXT_ARP_RESP_CTR.count)
Total # of UDP packets	:	$(EXT_SERV_PKT_CTR.count)
Total # of ICMP packets	:	$(EXT_ICMP_PKT_CTR.count)

Total # of dropped packets:	$(EXT_DROP_CTR.count)

============Internal INTERFACE======================
Input Packet Rate (pps)	:	$(INT_IN_PKT_ACTR.rate)        	   
Output Packet Rate (pps):	$(INT_OUT_PKT_ACTR.rate)
     	   		   
Total # of ARP requests	:	$(INT_ARP_REQ_CTR.count)  		   
Total # of ARP responses:	$(INT_ARP_RESP_CTR.count) 		   
Total # of UDP packets	:	$(INT_SERV_PKT_CTR.count)  		       
Total # of ICMP packets	:	$(INT_ICMP_PKT_CTR.count)
  		       
Total # of dropped packets:	$(INT_DROP_CTR.count)  		       
============================================================
	" /tmp/LB1_Report.log,
	stop);
